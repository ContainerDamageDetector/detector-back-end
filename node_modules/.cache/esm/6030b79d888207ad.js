let express,config,models;_888‍.x([["default",()=>_888‍.o]]);_888‍.w("express",[["default",["express"],function(v){express=v}]]);_888‍.w("../config",[["default",["config"],function(v){config=v}]]);_888‍.w("../models",[["default",["models"],function(v){models=v}]]);



const router = express.Router();

router.post("/login", async (req, res) => {
	try {
		const { username, password } = req.body;

		const user = await models.User.findOne({ where: { username } });
		if (!user) throw new Error("Incorrect Username or Password");
		const validPassword = await user.comparePassword(password);
		if (!validPassword) throw new Error("Incorrect Username or Password");
		const tokens = user.generateTokens()
		res.cookie('token', tokens.accessToken)
		res.status(200).json({
			tokens: tokens,
			user: user.toUserJson(),
		});
	} catch (error) {
		res.status(400).send(error.message);
	}
});

router.get("/logout", async (req, res) => {
	try {
		res.clearCookie("token");
		res.status(200).send("User Logged Out");
	} catch (error) {
		res.status(400).send(error.message);
	}
});

_888‍.d(router);